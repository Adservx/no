import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import './ConfigPanel.css';
export const ConfigPanel = ({ config, onConfigChange }) => {
    const handleChange = (e) => {
        const { name, value } = e.target;
        const isNumericField = !['pageSize', 'layoutDirection'].includes(name);
        onConfigChange({
            ...config,
            [name]: isNumericField ? Number(value) : value,
        });
    };
    return (_jsxs("div", { className: "config-panel", children: [_jsxs("div", { className: "config-group", children: [_jsxs("h4", { className: "config-group-title", children: [_jsx("span", { className: "config-icon", children: "\uD83D\uDCCF" }), " Layout"] }), _jsxs("div", { className: "config-item", children: [_jsxs("label", { htmlFor: "columns", children: [_jsx("span", { className: "label-icon", children: "\u2194\uFE0F" }), " Columns"] }), _jsxs("div", { className: "input-wrapper", children: [_jsx("input", { id: "columns", type: "number", name: "columns", value: config.columns, onChange: handleChange, min: "1", max: "10" }), _jsx("div", { className: "config-description", children: "Number of thumbnails horizontally" })] })] }), _jsxs("div", { className: "config-item", children: [_jsxs("label", { htmlFor: "rows", children: [_jsx("span", { className: "label-icon", children: "\u2195\uFE0F" }), " Rows"] }), _jsxs("div", { className: "input-wrapper", children: [_jsx("input", { id: "rows", type: "number", name: "rows", value: config.rows, onChange: handleChange, min: "1", max: "10" }), _jsx("div", { className: "config-description", children: "Number of thumbnails vertically" })] })] }), _jsxs("div", { className: "config-item", children: [_jsxs("label", { htmlFor: "layoutDirection", children: [_jsx("span", { className: "label-icon", children: "\uD83D\uDD04" }), " Direction"] }), _jsxs("div", { className: "input-wrapper", children: [_jsxs("select", { id: "layoutDirection", name: "layoutDirection", value: config.layoutDirection, onChange: handleChange, children: [_jsx("option", { value: "down", children: "Down First" }), _jsx("option", { value: "across", children: "Across First" })] }), _jsx("div", { className: "config-description", children: "Order of page placement" })] })] })] }), _jsxs("div", { className: "config-group", children: [_jsxs("h4", { className: "config-group-title", children: [_jsx("span", { className: "config-icon", children: "\u2699\uFE0F" }), " Page Settings"] }), _jsxs("div", { className: "config-item", children: [_jsxs("label", { htmlFor: "pageSize", children: [_jsx("span", { className: "label-icon", children: "\uD83D\uDCC4" }), " Page Size"] }), _jsxs("div", { className: "input-wrapper", children: [_jsxs("select", { id: "pageSize", name: "pageSize", value: config.pageSize, onChange: handleChange, children: [_jsx("option", { value: "A4", children: "A4" }), _jsx("option", { value: "A3", children: "A3" }), _jsx("option", { value: "Letter", children: "Letter" })] }), _jsx("div", { className: "config-description", children: "Output page dimensions" })] })] }), _jsxs("div", { className: "config-item", children: [_jsxs("label", { htmlFor: "spacing", children: [_jsx("span", { className: "label-icon", children: "\u2194\uFE0F" }), " Spacing (px)"] }), _jsxs("div", { className: "input-wrapper", children: [_jsx("input", { id: "spacing", type: "number", name: "spacing", value: config.spacing, onChange: handleChange, min: "0", max: "100", step: "0.1" }), _jsx("div", { className: "config-description", children: "Space between thumbnails" })] })] }), _jsxs("div", { className: "config-item", children: [_jsxs("label", { htmlFor: "resolution", children: [_jsx("span", { className: "label-icon", children: "\uD83D\uDD0D" }), " Resolution (DPI)"] }), _jsxs("div", { className: "input-wrapper", children: [_jsx("input", { id: "resolution", type: "number", name: "resolution", value: config.resolution, onChange: handleChange, min: "72", max: "600", step: "1" }), _jsx("div", { className: "config-description", children: "Higher values = larger files with more detail" })] })] })] })] }));
};
